مراحل ساخت پروژه و نصب Flask
ایجاد پوشه پروژه:


mkdir myproject
cd myproject
ایجاد محیط مجازی (Virtual Environment): برای جدا کردن وابستگی‌ها، یک محیط مجازی ایجاد کنید:


py -3 -m venv .venv
فعال‌سازی محیط مجازی: در ویندوز:

.venv\Scripts\activate

نصب Flask: پس از فعال‌سازی محیط مجازی، Flask را نصب کنید:


pip install Flask
ایجاد برنامه اولیه
ساخت فایل app.py: در پوشه پروژه، یک فایل به نام app.py ایجاد کنید و کد زیر را در آن قرار دهید:


from flask import Flask

app = Flask(__name__)

@app.route("/")
def hello_world():
    return "<p>Hello, World!</p>"
اجرای برنامه
فعال‌سازی محیط مجازی: پیش از اجرای برنامه، محیط مجازی باید فعال باشد:


.venv\Scripts\activate
اجرای برنامه با Flask: در همان پوشه‌ای که فایل app.py قرار دارد، دستور زیر را در ترمینال وارد کنید:


flask run
مشاهده خروجی: پس از اجرای دستور، یک آدرس مانند زیر در ترمینال مشاهده می‌کنید:



Running on http://127.0.0.1:5000
این آدرس را در مرورگر باز کنید تا متن "Hello, World!" نمایش داده شود.





4. تست برنامه
برای تست برنامه می‌توانید از ابزارهایی مانند Postman یا cURL استفاده کنید.

لیست API‌ها:
1. افزودن کاربر جدید
متد: POST
آدرس: http://127.0.0.1:5000/useradd
نمونه داده ورودی:

{
    "name": "John Doe",
    "email": "john.doe@example.com"
}
2. مشاهده لیست کاربران
متد: GET
آدرس: http://127.0.0.1:5000/listusers
3. مشاهده جزئیات کاربر خاص
متد: GET
آدرس: http://127.0.0.1:5000/userdetails/<id>
نمونه: http://127.0.0.1:5000/userdetails/1
4. به‌روزرسانی اطلاعات کاربر
متد: PUT
آدرس: http://127.0.0.1:5000/userupdate/<id>
نمونه داده ورودی:

{
    "name": "Jane Doe",
    "email": "jane.doe@example.com"
}
5. حذف کاربر
متد: DELETE
آدرس: http://127.0.0.1:5000/userdelete/<id>
